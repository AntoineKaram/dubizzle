generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  name       String
  address    String?
  profilePic String?
  role       Role      @default(USER)
  ads        Ad[]
  createdAt  DateTime  @default(now())
  createdBy  String?
  modifiedAt DateTime? @updatedAt
  modifiedBy String?
}

model Category {
  id            String        @id @default(uuid())
  name          String        @unique
  subcategories Subcategory[]
}

model Subcategory {
  id         String   @id @default(uuid())
  name       String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  ads        Ad[]
}

model Ad {
  id            String          @id @default(uuid())
  title         String
  description   String
  price         Float
  location      String
  images        String[]        @default([])
  status        AdStatus        @default(PENDING)
  createdAt     DateTime        @default(now())
  createdBy     String
  user          User            @relation(fields: [createdBy], references: [id])
  paymentOption String
  subcategoryId String
  subcategory   Subcategory     @relation(fields: [subcategoryId], references: [id])
  modifiedAt    DateTime?
  modifiedBy    String?
  AdEditRequest AdEditRequest[]

  @@index([createdBy])
}

model AdEditRequest {
  id            String     @id @default(cuid())
  adId          String
  ad            Ad         @relation(fields: [adId], references: [id])
  title         String
  description   String
  price         Float
  location      String
  paymentOption String
  images        String[]
  status        EditStatus @default(PENDING)
  createdAt     DateTime   @default(now())
  createdBy     String

  @@index([adId])
}

enum EditStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  MODERATOR
}

enum AdStatus {
  PENDING
  APPROVED
  REJECTED
}
